/* Generated By:JavaCC: Do not edit this line. MiniJavaLexerConstants.java */
package com.diegocostantino.minijava.lexer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaLexerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAREN = 6;
  /** RegularExpression Id. */
  int RPAREN = 7;
  /** RegularExpression Id. */
  int LBRACE = 8;
  /** RegularExpression Id. */
  int RBRACE = 9;
  /** RegularExpression Id. */
  int LSQPAREN = 10;
  /** RegularExpression Id. */
  int RSQPAREN = 11;
  /** RegularExpression Id. */
  int COMMA = 12;
  /** RegularExpression Id. */
  int SEMICOLON = 13;
  /** RegularExpression Id. */
  int DOT = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int MINUS = 16;
  /** RegularExpression Id. */
  int STAR = 17;
  /** RegularExpression Id. */
  int DIV = 18;
  /** RegularExpression Id. */
  int BANG = 19;
  /** RegularExpression Id. */
  int LT = 20;
  /** RegularExpression Id. */
  int GT = 21;
  /** RegularExpression Id. */
  int AND = 22;
  /** RegularExpression Id. */
  int ASSIGN = 23;
  /** RegularExpression Id. */
  int EQ_EQ = 24;
  /** RegularExpression Id. */
  int CLASS = 25;
  /** RegularExpression Id. */
  int STATIC = 26;
  /** RegularExpression Id. */
  int VOID = 27;
  /** RegularExpression Id. */
  int THIS = 28;
  /** RegularExpression Id. */
  int TRUE = 29;
  /** RegularExpression Id. */
  int FALSE = 30;
  /** RegularExpression Id. */
  int IF = 31;
  /** RegularExpression Id. */
  int ELSE = 32;
  /** RegularExpression Id. */
  int WHILE = 33;
  /** RegularExpression Id. */
  int NEW = 34;
  /** RegularExpression Id. */
  int RET = 35;
  /** RegularExpression Id. */
  int T_INT = 36;
  /** RegularExpression Id. */
  int T_BOOLEAN = 37;
  /** RegularExpression Id. */
  int PRINT = 38;
  /** RegularExpression Id. */
  int EXTENDS = 39;
  /** RegularExpression Id. */
  int PUBLIC = 40;
  /** RegularExpression Id. */
  int PRIVATE = 41;
  /** RegularExpression Id. */
  int MAIN = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int LETTER = 44;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 45;
  /** RegularExpression Id. */
  int IDENTIFIER = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"!\"",
    "\"<\"",
    "\">\"",
    "\"&&\"",
    "\"=\"",
    "\"==\"",
    "\"class\"",
    "\"static\"",
    "\"void\"",
    "\"this\"",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"new\"",
    "\"return\"",
    "\"int\"",
    "\"boolean\"",
    "\"System.out.println\"",
    "\"extends\"",
    "\"public\"",
    "\"private\"",
    "\"public static void main(String[] args)\"",
    "<DIGIT>",
    "<LETTER>",
    "<INTEGER_LITERAL>",
    "<IDENTIFIER>",
  };

}
